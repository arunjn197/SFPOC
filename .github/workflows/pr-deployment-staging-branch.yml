# Unique name for this workflow
name: Deploy staging branch to staging orgs

# Definition when the workflow should run
on:
    pull_request:
      types: [ closed ]
      branches: [ staging ]
      paths:
        - 'force-app/**'
            

# Jobs to be executed
jobs:
    deploy-branch-to-staging-orgs:
        runs-on: ubuntu-latest
        if: ${{ github.actor != 'dependabot[bot]' }}
        steps:
            # Install Salesforce CLI
            - name: 'Install Salesforce CLI'
              run: |
                  wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
                  mkdir ~/sfdx
                  tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
                  echo "$HOME/sfdx/bin" >> $GITHUB_PATH
                  ~/sfdx/bin/sfdx version

            # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
            - name: 'Installing sfdx git delta'
              run: | 
                  echo y | sfdx plugins:install sfdx-git-delta
                  sfdx plugins 

            # Checkout the source code
            - name: 'Checkout source code'
              uses: actions/checkout@v3
              with:
                fetch-depth: 0

            - name: 'Create delta packages for new, modified or deleted metadata'
              run: | 
                  mkdir changed-sources
                  sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/

            # Authenticate to org
            - name: 'Populate auth file with SFDX_URL secret of integration org'
              shell: bash
              run: |
                  echo '{"status":0,"result":{"id":"00D2w00000QvkagEAB","apiVersion":"61.0","accessToken":"00D2w00000Qvkag!ARMAQOHSRH82g5rGwVqQcnKAIZWyF9ZrVc5Py.va_oAT3KAFioB1nKOiKewN67h7cW4t_nZ94omJq_lhsFP31iGhsv2URm8y","instanceUrl":"https://creative-bear-1tytid-dev-ed.trailblaze.my.salesforce.com","username":"arunjn19793@creative-bear-1tytid.com","clientId":"PlatformCLI","connectedStatus":"Connected","sfdxAuthUrl":"force://PlatformCLI::5Aep861ZBQbtA4s3JVQS_rQi8qBQvZjY8h57yAsdU14TnLaApEDSTFGxR1kf8VOueamrf67lcCcN4pwLSThHVSS@creative-bear-1tytid-dev-ed.trailblaze.my.salesforce.com","alias":"Training"}}' > ./SFDX_STAGING_URL.json

            - name: 'Authenticate to Staging Org to Staging org'
              run: sfdx auth:sfdxurl:store -f ./SFDX_STAGING_URL.txt -s -a staging

            - name: 'Deploy delta changes - run specified tests'
              if: ${{ env.APEX_TESTS != 'all' }}
              run: |
                  echo ${{env.APEX_TESTS}}
                  sfdx force:source:deploy -p "changed-sources/force-app" --checkonly --testlevel RunSpecifiedTests --runtests ${{env.APEX_TESTS}} --json

            # If the env variable equals all, we run all tests
            - name: 'Deploy delta changes - run all tests'
              if: ${{ env.APEX_TESTS == 'all' }}
              run: |
                  sfdx force:source:deploy -p "changed-sources/force-app" --checkonly --testlevel RunLocalTests  --json

            - name: 'Deploy destructive changes (if any) to Staging org'
              run: sfdx force:mdapi:deploy -d "changed-sources/destructiveChanges" --checkonly --ignorewarnings